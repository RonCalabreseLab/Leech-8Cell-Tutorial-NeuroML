<?xml version="1.0" encoding="UTF-8"?>

<neuroml xmlns="http://www.neuroml.org/schema/neuroml2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/master/Schemas/NeuroML2/NeuroML_v2beta4.xsd"
	id="na_channel">

	 <!-- Values from the Genesis file "HNChan.g"
			function make_Na_ron	// Na-current
    str chanpath = "Na_ron"
    if ({exists {chanpath}})
        return 
    end

    create  tabchannel  {chanpath}
    setfield  {chanpath}  \
         Ek     {ENa}     \
         Gbar   {250e-9}  \
         Ik     0         \
         Gk     0	  \
		 Xpower	3 \
		 Ypower	1 \
		 Zpower	0  

    call    {chanpath}    TABCREATE X 100 -0.100 0.050
                                  
    settab2const {chanpath}  X_A  0  100  0.0001    // -0.1 thru 0.05=>0.  
       
       
       //                               -150            -.023
    FillTableInf {chanpath}  X_B  0   1 -150 {nashft_X} -.024
		
		/* Setting the calc_mode to NO_INTERP for speed */
		setfield {chanpath} X_A->calc_mode 0 X_B->calc_mode 0

		/* tweaking the tables for the tabchan calculation */
		tweaktau {chanpath} X

		/* Filling the tables using B-SPLINE interpolation */
		call {chanpath} TABFILL X 3000 0


 call    {chanpath}    TABCREATE Y 100 -0.100 0.050
 
 //                             .004 .006 500            -.023
 FillTableTau_Na {chanpath} Y_A .004 .006 500 {nashft_Y} -.023

//                                       500            -.025  
 FillTableInf   {chanpath} Y_B 0     1   500 {nashft_Y} -.025	

		/* Setting the calc_mode to NO_INTERP for speed */
		setfield {chanpath} Y_A->calc_mode 0 Y_B->calc_mode 0

		/* tweaking the tables for the tabchan calculation */
		tweaktau {chanpath} Y

		/* Filling the tables using B-SPLINE interpolation */
		call {chanpath} TABFILL Y 3000 0
end

Equations below are from the paper: 
A Model of a Segmental Oscillator in the Leech Heartbeat Neuronal Network
A.A.V. HILL, J. LU, M.A. MASINO, O.H. OLSEN, R.L. CALABRESE
Biology Department, 1510 Clifton Road, Emory University, Atlanta, GA 30322
ahill@biology.emory.edu
Received May 17, 2000; Revised November 17, 2000; Accepted December 5, 2000

Overall Current (I) for Na channel = ḡCaF  m^3Na  hNa (V−ENa)

 change in activation gate = dmNa/dt = steady state: f∞(−150, 0.029, V ) − mNa / time course: 0.0001
 change in inactivation gate = hNa/dt =  steady state:  f∞(500, 0.030, V ) − hNa / time course: τhNa(V)

τhNa(V) = 0.004 + (0.006 / 1 + exp(500(V + 0.028))) + (0.01 / cosh(300(V + 0.027)))  This value will be created custom at the end of this file

f∞(a, b, V ) = 1 / 1 + exp(a(V +b))
Parameters for steady state for m and h:
"rate" = 1
"midpoint" = -b
"scale" = -1/a

Parameters for time course (τ):
"offset" = c
"rate" = d
"midpoint" = b
"scale" = 1/a
-->
    	<ionChannelHH id="na_channel" conductance="2.50nS" species="na">
        
        	<gateHHtauInf id="m" instances="3">
            		<steadyState type="HHSigmoidVariable" rate="1" midpoint="-29.00mV" scale="6.666666mV" />
            		<timeCourse type="fixedTimeCourse" tau="0.0001s"/> 
       		</gateHHtauInf>

       		<gateHHtauInf id="h" instances="1">
            		<steadyState type="HHSigmoidVariable" rate="1" midpoint="-30.00mV" scale="-2.00mV" />
            		<timeCourse type="tauHNa" midpoint="27.00mV"  scale="3.333333mV" /> 
       		</gateHHtauInf>
       
		</ionChannelHH>
		
			<!--Custom tauHNa component -->
    <ComponentType name="tauHNa" extends="baseVoltageDepTime"
        description="Voltage-dependent time constant that has a sigmoid shape and an offset">
        
        <!--Parameter name="offset" dimension="time" />
        <Parameter name="rate" dimension="time" /-->
        <Parameter name="midpoint" dimension="voltage" />
        <Parameter name="scale" dimension="voltage" />
        <Constant name="SEC" dimension="time" value="1s"/>
        <Constant name="VOLT" dimension="voltage" value="1V"/>
        
        <Dynamics>
        							<!--
        							τhNa(V) = 0.004 + (0.006 / 1 + exp(500(V + 0.028))) + (0.01 / cosh(300(V + 0.027))) 
        							offset = ms
        							rate =  ms
        							cosh = exp(v) + exp(-v) / 2 
        							midpoint = 27.00 mv
        							scale = 1/300
        							-->
                                    <!-- COSH exists in NeuroML CG 2017/07/17 -->
        	<DerivedVariable name="v_cosh"  value="((v + midpoint)/scale)" dimension="none"/>
        	<DerivedVariable name="tau_hNa"  value="0.004 + (0.006 /( 1 + exp(500 * ((v/VOLT) + 0.028)))) + (0.01 / ((exp(v_cosh) + exp(0 - v_cosh)) / 2))" dimension = "none"/>
        	
        	<DerivedVariable name="t0" exposure="t" value="tau_hNa * SEC" dimension = "time"/>
        </Dynamics>

	</ComponentType>

	</neuroml>
