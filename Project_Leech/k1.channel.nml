<?xml version="1.0" encoding="UTF-8"?>
<neuroml xmlns="http://www.neuroml.org/schema/neuroml2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/master/Schemas/NeuroML2/NeuroML_v2beta4.xsd"
	id="k1_channel">
	
<!-- 
Values below are from the Genesis file "HNChan.g":
function make_K1_ron
    str chanpath = "K1_ron"
    if ({exists {chanpath}})
        return
    end

    create  tabchannel  {chanpath}
    setfield  {chanpath}  \
         Ek     {EK1}     \
         Gbar   {100e-9}  \
         Ik     0         \
         Gk     0         \
		 Xpower	2 \
		 Ypower	1 \
		 Zpower	0  

    call    {chanpath}    TABCREATE X 100 -0.100 0.050
    
    FillTableTau {chanpath} X_A .001 .011 150 {k1shft1} -.006
 //                                      -143
    FillTableInf {chanpath} X_B 0     1  -143 {k1shft} -.011
		/* Setting the calc_mode to NO_INTERP for speed */
		setfield {chanpath} X_A->calc_mode 0 X_B->calc_mode 0

		/* tweaking the tables for the tabchan calculation */
		tweaktau {chanpath} X

		/* Filling the tables using B-SPLINE interpolation */
		call {chanpath} TABFILL X 3000 0


 call    {chanpath}    TABCREATE Y 100 -0.100 0.050
 FillTableTau {chanpath} Y_A .500 .200 -143 {k1shft} -.003
 FillTableInf {chanpath} Y_B 0    1     111 {k1shft} -.018	

		/* Setting the calc_mode to NO_INTERP for speed */
		setfield {chanpath} Y_A->calc_mode 0 Y_B->calc_mode 0

		/* tweaking the tables for the tabchan calculation */
		tweaktau {chanpath} Y

		/* Filling the tables using B-SPLINE interpolation */
		call {chanpath} TABFILL Y 3000 0
end

Function Definitions from "filltable.g"

Function below is equal to timecourse in neuroML "gateHHtauInf/ timeCourse":
function FillTableTau(gate, table, A, B, C, Shift, E)
//A- constant, B- amplitude, C- slope, Shift- nshift, E- midpoint
    str gate
    str table
    int i=1
    float A, B, C, E, Shift, value, tmp
     for (i = 0; i <= 100; i = {i} + 1)
        tmp ={C}*((-.100+.0015*i)-{Shift}-{E})
        value = {A}+{B}/(1+{exp {tmp}})
        // echo {i}, {value} 
	setfield {gate} {table}->table[{i}] {value}
     end
end

Function below is equal to steadyState in neuroML "gateHHtauInf/ steadyState"
function FillTableInf(gate, table, A, B, C, Shift, E)
//A- constant, B- amplitude, C- slope, Shift- nshift, E- midpoint
    str gate
    str table
    int i=1
    float A, B, C, E, Shift, value, tmp
  	for (i = 0; i <= 100; i = i + 1)
        tmp ={C}*((-.100+.0015*i)-{Shift}-{E})
        value = {A}+{B}/(1+{exp {tmp}}) 
  	setfield {gate} {table}->table[{i}] {value}
    end
end

Equations below are from the paper: 
A Model of a Segmental Oscillator in the Leech Heartbeat Neuronal Network
A.A.V. HILL, J. LU, M.A. MASINO, O.H. OLSEN, R.L. CALABRESE
Biology Department, 1510 Clifton Road, Emory University, Atlanta, GA 30322
ahill@biology.emory.edu
Received May 17, 2000; Revised November 17, 2000; Accepted December 5, 2000

Overall Current (I) for K1 channel = ḡK1  m^2K1  hK1 (V−EK)

 change in activation gate = dmCaS/dt = steady state: f∞(−143, 0.021, V ) − mK 1 /  time course: τ (150, 0.016, 0.001, 0.011, V )
 change in inactivation gate = hCaS/dt =  steady state:  f (111,0.028,V)−hK1  / time course: τ (−143, 0.013, 0.5, 0.2, V )

f∞(a, b, V ) = 1 / 1 + exp(a(V +b))
Parameters for steady state for m and h:
"rate" = 1
"midpoint" = -b
"scale" = -1/a

τ(a, b, c, d, V) = c + d / 1 + exp(a(V+b)) : This value will come from "sigmoid.offset.xml" file
Parameters for time course (τ):
"offset" = c
"rate" = d
"midpoint" = b
"scale" = 1/a
-->	

<include href="sigmoid.offset.xml"/>


	 	 
 <ionChannelHH id="k1_channel" conductance="100nS" species="k">
        
        	<gateHHtauInf id="m" instances="2">
            		<steadyState type="HHSigmoidVariable" rate="1" midpoint="-21.0mV" scale="6.993007mV" />
            		<timeCourse type="sigmoidOffsetTimeCourse" offset="0.001s" rate="0.011s" midpoint="16.0mV" scale="6.6667mV" /> 
       		</gateHHtauInf>

       		<gateHHtauInf id="h" instances="1">
            		<steadyState type="HHSigmoidVariable" rate="1" midpoint="-28.0mV" scale="-9.009mV" />
            		<timeCourse type="sigmoidOffsetTimeCourse" offset="0.5s" rate="0.2s" midpoint="13.0mV"  scale="-6.993007mV" /> 
       		</gateHHtauInf>
       
		</ionChannelHH>	
<!--ComponentType name="sigmoidOffsetTimeCourse" 
        extends="baseVoltageDepTime"
        description="Voltage-dependent time constant that has a sigmoid shape and an offset">

        <Parameter name="offset" dimension="time" />
        <Parameter name="rate" dimension="time" />
        <Parameter name="midpoint" dimension="voltage" />
        <Parameter name="scale" dimension="voltage" />

        <Dynamics>
            <DerivedVariable name="t" exposure="t" value="offset + rate / (1 + exp((v + midpoint)/scale))" />
        </Dynamics>

</ComponentType-->

</neuroml>
