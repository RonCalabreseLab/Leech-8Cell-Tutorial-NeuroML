<?xml version="1.0" encoding="UTF-8"?>
<neuroml xmlns="http://www.neuroml.org/schema/neuroml2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.neuroml.org/schema/neuroml2 https://raw.github.com/NeuroML/NeuroML2/master/Schemas/NeuroML2/NeuroML_v2beta4.xsd"
	id="k1_channel">
	
<!-- Values from the Genesis file "HNChan.g"
function make_K1_ron
    str chanpath = "K1_ron"
    if ({exists {chanpath}})
        return
    end

    create  tabchannel  {chanpath}
    setfield  {chanpath}  \
         Ek     {EK1}     \
         Gbar   {100e-9}  \
         Ik     0         \
         Gk     0         \
		 Xpower	2 \
		 Ypower	1 \
		 Zpower	0  

    call    {chanpath}    TABCREATE X 100 -0.100 0.050
    
    FillTableTau {chanpath} X_A .001 .011 150 {k1shft1} -.006
 //                                      -143
    FillTableInf {chanpath} X_B 0     1  -143 {k1shft} -.011
		/* Setting the calc_mode to NO_INTERP for speed */
		setfield {chanpath} X_A->calc_mode 0 X_B->calc_mode 0

		/* tweaking the tables for the tabchan calculation */
		tweaktau {chanpath} X

		/* Filling the tables using B-SPLINE interpolation */
		call {chanpath} TABFILL X 3000 0


 call    {chanpath}    TABCREATE Y 100 -0.100 0.050
 FillTableTau {chanpath} Y_A .500 .200 -143 {k1shft} -.003
 FillTableInf {chanpath} Y_B 0    1     111 {k1shft} -.018	

		/* Setting the calc_mode to NO_INTERP for speed */
		setfield {chanpath} Y_A->calc_mode 0 Y_B->calc_mode 0

		/* tweaking the tables for the tabchan calculation */
		tweaktau {chanpath} Y

		/* Filling the tables using B-SPLINE interpolation */
		call {chanpath} TABFILL Y 3000 0
end

Function Definitions from "filltable.g"

function FillTableTau(gate, table, A, B, C, Shift, E)
//A- constant, B- amplitude, C- slope, Shift- nshift, E- midpoint
    str gate
    str table
    int i=1
    float A, B, C, E, Shift, value, tmp
     for (i = 0; i <= 100; i = {i} + 1)
        tmp ={C}*((-.100+.0015*i)-{Shift}-{E})
        value = {A}+{B}/(1+{exp {tmp}})
        // echo {i}, {value} 
	setfield {gate} {table}->table[{i}] {value}
     end
end

function FillTableInf(gate, table, A, B, C, Shift, E)
//A- constant, B- amplitude, C- slope, Shift- nshift, E- midpoint
    str gate
    str table
    int i=1
    float A, B, C, E, Shift, value, tmp
  	for (i = 0; i <= 100; i = i + 1)
        tmp ={C}*((-.100+.0015*i)-{Shift}-{E})
        value = {A}+{B}/(1+{exp {tmp}}) 
  	setfield {gate} {table}->table[{i}] {value}
    end
end
-->	

<include href="sigmoid.offset.xml"/>
	 	 
 <ionChannelHH id="k1_channel" conductance="100nS" species="k">
        
        	<gateHHtauInf id="m" instances="2">
            		<steadyState type="HHSigmoidVariable" rate="1" midpoint="-29.13mV" scale="8.922mV" />
            		<timeCourse type="sigmoidOffsetTimeCourse" offset="3.861ms" rate="-3.434ms" midpoint="-51.35mV" scale="5.98mV" /> 
       		</gateHHtauInf>

       		<gateHHtauInf id="h" instances="1">
            		<steadyState type="HHSigmoidVariable" rate="1" midpoint="-40mV" scale="-6.048mV" />
            		<timeCourse type="sigmoidOffsetTimeCourse" offset="2.834ms" rate="-2.371ms" midpoint="-21.9mV"  scale="2.64mV" /> 
       		</gateHHtauInf>
       
		</ionChannelHH>	

</neuroml>
